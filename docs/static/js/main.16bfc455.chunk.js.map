{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACRC,mBAAS,IADD,mBACtCC,EADsC,KAC1BC,EAD0B,KAgB9C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAnBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCJlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYdM,GAZc,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yBAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAW,WACPxB,EAASC,GACRwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IACGqB,EDZ2BK,CAAc1B,GAAnCa,EADwB,EAC7BN,KAAca,EADe,EACfA,QAItB,OACI,gCACI,oBAAIJ,UAAU,sDAAd,SAAuEhB,IACtEoB,GAAW,wCAChB,qBAAKJ,UAAU,YAAf,SAESH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEbjBgB,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAC,aADhB,mBACvB0C,EADuB,KACX3C,EADW,KAM9B,OACI,gCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,YCf9B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.16bfc455.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n    const [ inputValue, setInputValue ] = useState('')\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [ inputValue, ...cats ]);\n            setInputValue('')\n        }\n        \n        // console.log('submit hecho')\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n            type=\"text\"\n            value={ inputValue }\n            onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=DLWWpUVzbHfwP5GpVkR89s6f7bfiwgU3&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\nreturn ( gifs );\n}","import React from 'react'\n\n\nexport const GifGridItem = ({ title, url }) => {\n\n    return (\n        <div className=\"card animate__fadeInUp\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({ category }) => {\n    const { data:images , loading } = useFetchGifs( category );\n\n\n    \n    return (\n        <div>\n            <h3 className=\"animate__animated animate__fadeIn animate__delay-3s\" >{ category }</h3>\n            {loading && <p>Loading</p>}\n        <div className=\"card-grid\">\n            \n                {images.map( img => (\n                    <GifGridItem \n                    key={ img.id }\n                    { ...img }\n                    />\n                ))}\n        </div>\n        </div>\n    )\n};","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    })\n\n    useEffect( () => {\n        getGifs( category )\n        .then( imgs => {\n            setState({\n                data: imgs,\n                loading: false,\n            });\n        });\n    }, [category])\n    return state;\n}","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid'\n\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState(['Mr robot'])\n    // const handleAdd = () => {\n    //     setCategories(cats => [ ...cats, 'popo'])\n    // };\n\n    return (\n        <div>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr/>\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid \n                        key={ category }\n                        category={ category }/>                    )\n                }\n            </ol>\n        </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}